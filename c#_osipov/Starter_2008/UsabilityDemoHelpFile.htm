<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<HTML>
	<HEAD>
		<META NAME="GENERATOR" Content="Microsoft Visual Studio 7.0">
		<TITLE></TITLE>
	</HEAD>
	<BODY>
		<a name="Form">FORM: This form is localized into U.S. English, U.K. English, and 
			German. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<br>
		<a name="Output">OUTPUT: This text box will show the results of each query that you 
			make via the buttons on the form. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<br>
		<a name="Culture">CULTURE: If you wish to change the current language of the 
			application, click this button to make a new choice. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<br>
		<a name="DateAndTime">DATE/TIME: To show a sample of today's date as it is represented in your specific language, click this button</a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<a name="Currency">CURRENCY: To show a sample of currency as it is represented in 
			your specific language, click this button. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<br>
		<a name="String">STRING: To show a sample string as it is represented in your 
			specific language, click this button. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
		<br>
		<a name="Exit">EXIT: Ends the application. </a>
		<br>
		<P>
			The .NET Framework is a multi-language environment for building, deploying, and 
			running Web Services and applications. It consists of three main parts:
			<UL type="disc">
				<LI>
					<B>Common Language Runtime</B> Despite its name, the runtime actually has a 
					role in both a component's runtime and development time experiences. While the 
					component is running, the runtime is responsible for managing memory 
					allocation, starting up and stopping threads and processes, and enforcing 
					security policy, as well as satisfying any dependencies that the component 
					might have on other components. At development time, the runtime's role changes 
					slightly; because it automates so much (for example, memory management), the 
					runtime makes the developer's experience very simple, especially when compared 
					to COM today. In particular, features such as reflection dramatically reduce 
					the amount of code a developer must write in order to turn business logic into 
					a reusable component.
				</LI>
				<LI>
					<B>Unified programming classes</B> The framework provides developers with a 
					unified, object-oriented, hierarchical, and extensible set of class libraries 
					(APIs). Currently, C++ developers use the Microsoft Foundation Classes, Java 
					developers use the Windows Foundation Classes. The framework unifies these 
					disparate models and give Visual Basic programmers access to class libraries as 
					well. By creating a common set of APIs across all programming languages, the 
					.NET Framework runtime enables cross-language inheritance, error handling, and 
					debugging. All programming languages, from ECMAScript to C++, have similar 
					access to the framework and developers are free to choose the language that 
					they want to use.
				</LI>
				<LI>
					<B>Active Server Pages.NET</B> ASP.NET builds on the programming classes of the 
					.NET Framework, providing a Web application model with a set of controls and 
					infrastructure that make it simple to build Web applications. ASP.NET includes 
					a set of controls that encapsulate common HTML user interface elements, such as 
					text boxes and drop-down menus. These controls run on the Web server, however, 
					and push their user interface as HTML to the browser. On the server, the 
					controls expose an object-oriented programming model that brings the richness 
					of object-oriented programming to the Web developer. ASP.NET also provides 
					infrastructure services, such as session state management and process 
					recycling, that further reduce the amount of code a developer must write and 
					increase application reliability. In addition, ASP.NET uses these same concepts 
					to enable developers to deliver software as a service. Using Web Services 
					features, ASP.NET developers can write their business logic and use the ASP.NET 
					infrastructure to deliver that service via SOAP.
				</LI>
			</UL>
		</P>
	</BODY>
</HTML>
